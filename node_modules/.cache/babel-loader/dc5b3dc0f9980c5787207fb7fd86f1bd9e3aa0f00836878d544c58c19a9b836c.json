{"ast":null,"code":"import { SORT_HEIGHT, GET_TEMPERAMENTS, GET_DOG, GET_DOGS, GET_DOG_BY_NAME, FILTER_BY_SOURCE, FILTER_BY_TEMPERAMENTS, SORT_NAME, SORT_WEIGHT, REMOVE_FILTERS, CLEAN_DOG_DETAILS, LOADING, CREATE_DOG, UPDATE_DOG, DELETE_DOG } from './actionTypes';\nimport axios from 'axios';\nconst SERVER_URL = 'http://localhost:3001';\nexport const getDogs = () => {\n  return async function (dispatch) {\n    dispatch({\n      type: LOADING\n    });\n    const apiData = await axios.get(`/dogs`);\n    const dogs = apiData.data;\n    dispatch({\n      type: GET_DOGS,\n      payload: dogs\n    });\n  };\n};\nexport const getDog = id => {\n  return async function (dispatch) {\n    dispatch({\n      type: LOADING\n    });\n    const apiData = await axios.get(`/dogs/${id}`);\n    const dog = apiData.data;\n    dispatch({\n      type: GET_DOG,\n      payload: dog\n    });\n  };\n};\nexport const getDogByName = name => {\n  return async function (dispatch) {\n    const dog = (await axios.get(`${SERVER_URL}/dogs?name=${name}`)).data;\n    dispatch({\n      type: GET_DOG_BY_NAME,\n      payload: dog\n    });\n  };\n};\nexport const getTemperaments = () => {\n  return async function (dispatch) {\n    const temp = (await axios.get(`${SERVER_URL}/temperaments`)).data;\n    dispatch({\n      type: GET_TEMPERAMENTS,\n      payload: temp\n    });\n  };\n};\nexport const cleanDogDetails = () => {\n  return {\n    type: CLEAN_DOG_DETAILS\n  };\n};\nexport const setLoading = () => {\n  return {\n    type: LOADING\n  };\n};\nexport const createDog = form => {\n  return async function (dispatch) {\n    try {\n      const create = (await axios.post(`${SERVER_URL}/dogs`, form)).data;\n      dispatch({\n        type: CREATE_DOG,\n        payload: create\n      });\n    } catch (error) {\n      alert(error.create);\n    }\n  };\n};\nexport function deleteDog(id) {\n  return async function (dispatch) {\n    try {\n      await axios.delete(`${SERVER_URL}/dogs/${id}`);\n      return dispatch({\n        type: \"DELETE_DOG\",\n        payload: id\n      });\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n}\nexport const updateDog = id => {\n  return async function (dispatch) {\n    const update = await axios.put(`${SERVER_URL}/dogs/${id}`);\n    dispatch({\n      type: UPDATE_DOG,\n      payload: update\n    });\n  };\n};\n\n//FILTER\nexport const filterBySource = payload => {\n  return {\n    type: FILTER_BY_SOURCE,\n    payload\n  };\n};\nexport const filterByTemperaments = payload => {\n  return {\n    type: FILTER_BY_TEMPERAMENTS,\n    payload\n  };\n};\nexport const removeFilters = () => {\n  return {\n    type: REMOVE_FILTERS\n  };\n};\n\n//ORDER\nexport const sortName = payload => {\n  return {\n    type: SORT_NAME,\n    payload\n  };\n};\nexport const sortWeight = payload => {\n  return {\n    type: SORT_WEIGHT,\n    payload\n  };\n};\nexport const sortHeight = payload => {\n  return {\n    type: SORT_HEIGHT,\n    payload\n  };\n};","map":{"version":3,"names":["SORT_HEIGHT","GET_TEMPERAMENTS","GET_DOG","GET_DOGS","GET_DOG_BY_NAME","FILTER_BY_SOURCE","FILTER_BY_TEMPERAMENTS","SORT_NAME","SORT_WEIGHT","REMOVE_FILTERS","CLEAN_DOG_DETAILS","LOADING","CREATE_DOG","UPDATE_DOG","DELETE_DOG","axios","SERVER_URL","getDogs","dispatch","type","apiData","get","dogs","data","payload","getDog","id","dog","getDogByName","name","getTemperaments","temp","cleanDogDetails","setLoading","createDog","form","create","post","error","alert","deleteDog","delete","e","console","log","message","updateDog","update","put","filterBySource","filterByTemperaments","removeFilters","sortName","sortWeight","sortHeight"],"sources":["C:/Users/Usuario/Downloads/CLIENT PI DOGS/client/src/redux/actions.js"],"sourcesContent":["import { SORT_HEIGHT,GET_TEMPERAMENTS, GET_DOG, GET_DOGS, GET_DOG_BY_NAME, FILTER_BY_SOURCE, FILTER_BY_TEMPERAMENTS, SORT_NAME, SORT_WEIGHT, REMOVE_FILTERS, CLEAN_DOG_DETAILS, LOADING, CREATE_DOG, UPDATE_DOG, DELETE_DOG} from './actionTypes';\r\n\r\nimport axios from 'axios';\r\nconst SERVER_URL = 'http://localhost:3001';\r\n\r\n\r\nexport const getDogs = () => {\r\n    return async function(dispatch){\r\n        dispatch(({type:LOADING}));\r\n        const apiData = await axios.get(`/dogs`);\r\n        const dogs = apiData.data;\r\n        dispatch({type:GET_DOGS, payload: dogs})\r\n    }\r\n}\r\n\r\nexport const getDog = (id) => {\r\n    return async function(dispatch){\r\n        dispatch({type:LOADING});\r\n        const apiData = await axios.get(`/dogs/${id}`)\r\n        const dog = apiData.data;\r\n        dispatch({type:GET_DOG, payload:dog})\r\n    }\r\n}\r\n\r\n\r\nexport const getDogByName =(name) =>{\r\n    return async function (dispatch){\r\n        const dog = (await axios.get(`${SERVER_URL}/dogs?name=${name}`)).data;\r\n        dispatch({type: GET_DOG_BY_NAME, payload:dog})\r\n    }\r\n}\r\n\r\nexport const getTemperaments = ()=>{\r\n    return async function (dispatch){\r\n        const temp = (await axios.get(`${SERVER_URL}/temperaments`)).data\r\n        dispatch({type: GET_TEMPERAMENTS, payload: temp})    \r\n    }\r\n}\r\n\r\nexport const cleanDogDetails = ()=>{\r\n    return({type:CLEAN_DOG_DETAILS})\r\n}\r\nexport const setLoading = ()=>{\r\n    return({type:LOADING})\r\n}\r\nexport const createDog = (form)=>{\r\n    return async function(dispatch){\r\n        try{\r\n            const create = (await axios.post(`${SERVER_URL}/dogs`, form)).data\r\n             dispatch({type: CREATE_DOG, payload: create})\r\n    } catch(error){\r\n        alert(error.create)\r\n    }\r\n        }       \r\n    \r\n}\r\n\r\nexport function deleteDog(id) {\r\n    return async function(dispatch){\r\n        try{\r\n            await axios.delete(`${SERVER_URL}/dogs/${id}`)\r\n            return (\r\n                dispatch({\r\n                        type: \"DELETE_DOG\",\r\n                        payload: id  \r\n                })\r\n            )       \r\n        }\r\n        catch (e){\r\n            console.log(e.message);\r\n        }\r\n    }\r\n}\r\nexport const updateDog=(id)=>{\r\n    return async function(dispatch){\r\n        const update = (await axios.put(`${SERVER_URL}/dogs/${id}`))\r\n        dispatch({type:UPDATE_DOG, payload:update})\r\n    }\r\n}\r\n\r\n//FILTER\r\nexport const filterBySource= (payload)=>{\r\n    return({type:FILTER_BY_SOURCE, payload})\r\n}\r\nexport const filterByTemperaments = (payload)=>{\r\n    return({type: FILTER_BY_TEMPERAMENTS, payload })\r\n}\r\nexport const removeFilters = ()=>{\r\n    return({type:REMOVE_FILTERS})\r\n}\r\n\r\n\r\n//ORDER\r\nexport const sortName = (payload) =>{\r\n    return({type: SORT_NAME, payload})\r\n}\r\nexport const sortWeight = (payload)=>{\r\n    return({type: SORT_WEIGHT, payload})\r\n}\r\n\r\nexport const sortHeight = (payload)=>{\r\n    return({type: SORT_HEIGHT, payload})\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}